{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sansk\\\\Desktop\\\\macccccc\\\\macccccc\\\\projects selectio for portfolio\\\\web development\\\\tic-tac-toe\\\\src\\\\Components\\\\Game.js\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null)\n  }]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [xWins, setXWins] = useState(0);\n  const [oWins, setOWins] = useState(0);\n  const [winnerCounted, setWinnerCounted] = useState(false);\n  const current = history[stepNumber] || {\n    squares: Array(9).fill(null)\n  }; // Fix added here\n  const result = calculateWinner(current.squares);\n  const winner = result ? result.winner : null;\n  const winningSquares = result ? result.line : [];\n  useEffect(() => {\n    if (winner && !winnerCounted) {\n      // If there's a winner, update win count and reset the game\n      if (winner === \"X\") {\n        setXWins(xWins + 1);\n      } else if (winner === \"O\") {\n        setOWins(oWins + 1);\n      }\n      setWinnerCounted(true);\n\n      // Automatically reset the game after a round is completed\n      setTimeout(() => {\n        resetGame();\n      }, 3000); // Adjust the timeout duration as needed\n    } else if (!winner && stepNumber === 9) {\n      // If it's a draw (no winner and all squares filled)\n      setTimeout(() => {\n        // Show a pop-up animation with a \"Try Again\" prompt\n        alert(\"It's a draw! Try again.\");\n        resetGame();\n      }, 1000); // Adjust the timeout duration as needed\n    }\n  }, [winner, winnerCounted, xWins, oWins, stepNumber]);\n  const resetGame = () => {\n    setHistory([{\n      squares: Array(9).fill(null)\n    }]);\n    setStepNumber(0);\n    setXIsNext(true);\n    setWinnerCounted(false);\n  };\n  const handleClick = i => {\n    const historyUpToCurrent = history.slice(0, stepNumber + 1);\n    const currentSquares = historyUpToCurrent[historyUpToCurrent.length - 1].squares.slice();\n    if (winner || currentSquares[i]) {\n      return;\n    }\n    currentSquares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(historyUpToCurrent.concat([{\n      squares: currentSquares\n    }]));\n    setStepNumber(historyUpToCurrent.length);\n    setXIsNext(!xIsNext);\n    setWinnerCounted(false);\n  };\n  const stepBack = () => {\n    if (stepNumber > 0) {\n      setStepNumber(stepNumber - 1);\n      setXIsNext(stepNumber % 2 === 0);\n      setWinnerCounted(false);\n    }\n  };\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: handleClick,\n        winningSquares: winningSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Player X Wins: \", xWins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Player O Wins: \", oWins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"step-back-button\",\n        onClick: stepBack,\n        children: \"Step Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"yMvw+SnEq3crICwOQZ0B2UeZ3ps=\");\n_c = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  return null;\n}\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","Game","_s","history","setHistory","squares","Array","fill","stepNumber","setStepNumber","xIsNext","setXIsNext","xWins","setXWins","oWins","setOWins","winnerCounted","setWinnerCounted","current","result","calculateWinner","winner","winningSquares","line","setTimeout","resetGame","alert","handleClick","i","historyUpToCurrent","slice","currentSquares","length","concat","stepBack","status","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","lines","a","b","c","$RefreshReg$"],"sources":["C:/Users/sansk/Desktop/macccccc/macccccc/projects selectio for portfolio/web development/tic-tac-toe/src/Components/Game.js"],"sourcesContent":["// src/components/Game.js\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\n\nfunction Game() {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null) }]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [xWins, setXWins] = useState(0);\n  const [oWins, setOWins] = useState(0);\n  const [winnerCounted, setWinnerCounted] = useState(false);\n\n  const current = history[stepNumber] || { squares: Array(9).fill(null) }; // Fix added here\n  const result = calculateWinner(current.squares);\n  const winner = result ? result.winner : null;\n  const winningSquares = result ? result.line : [];\n\n  useEffect(() => {\n  if (winner && !winnerCounted) {\n    // If there's a winner, update win count and reset the game\n    if (winner === \"X\") {\n      setXWins(xWins + 1);\n    } else if (winner === \"O\") {\n      setOWins(oWins + 1);\n    }\n    setWinnerCounted(true);\n\n    // Automatically reset the game after a round is completed\n    setTimeout(() => {\n      resetGame();\n    }, 3000); // Adjust the timeout duration as needed\n  } else if (!winner && stepNumber === 9) {\n    // If it's a draw (no winner and all squares filled)\n    setTimeout(() => {\n      // Show a pop-up animation with a \"Try Again\" prompt\n      alert(\"It's a draw! Try again.\");\n      resetGame();\n    }, 1000); // Adjust the timeout duration as needed\n  }\n}, [winner, winnerCounted, xWins, oWins, stepNumber]);\n\nconst resetGame = () => {\n  setHistory([{ squares: Array(9).fill(null) }]);\n  setStepNumber(0);\n  setXIsNext(true);\n  setWinnerCounted(false);\n};\n\n  const handleClick = (i) => {\n    const historyUpToCurrent = history.slice(0, stepNumber + 1);\n    const currentSquares =\n      historyUpToCurrent[historyUpToCurrent.length - 1].squares.slice();\n\n    if (winner || currentSquares[i]) {\n      return;\n    }\n\n    currentSquares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(historyUpToCurrent.concat([{ squares: currentSquares }]));\n    setStepNumber(historyUpToCurrent.length);\n    setXIsNext(!xIsNext);\n    setWinnerCounted(false);\n  };\n\n  const stepBack = () => {\n    if (stepNumber > 0) {\n      setStepNumber(stepNumber - 1);\n      setXIsNext(stepNumber % 2 === 0);\n      setWinnerCounted(false);\n    }\n  };\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={current.squares}\n          onClick={handleClick}\n          winningSquares={winningSquares}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <div>Player X Wins: {xWins}</div>\n        <div>Player O Wins: {oWins}</div>\n        <button class=\"step-back-button\" onClick={stepBack}>\n          Step Back\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return null;\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}